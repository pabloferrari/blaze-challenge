version: '3'
services:
  # PostgreSQL Service
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - backend_network

  # Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "3001:3001"
    environment:
      PORT: ${BACKEND_PORT}
      DB_USERNAME: ${BACKEND_DB_USERNAME}
      DB_PASSWORD: ${BACKEND_DB_PASSWORD}
      DB_NAME: ${BACKEND_DB_NAME}
      DB_PORT: ${BACKEND_DB_PORT}
      DB_HOST: ${BACKEND_DB_HOST}
      API_KEY: ${BACKEND_API_KEY}
    depends_on:
      - postgres
    networks:
      - backend_network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: ${FRONTEND_API_URL}
    networks:
      - backend_network

networks:
  backend_network: